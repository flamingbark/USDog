"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockMulticallTarget__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "fieldAlways123",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "fieldAlwaysFoo",
                type: "string",
            },
        ],
        name: "MyError",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "argPositive",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "argNegative",
                type: "int256",
            },
        ],
        name: "alwaysRevertsWithCustomError",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "argPositive",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "argNegative",
                type: "int256",
            },
        ],
        name: "alwaysRevertsWithNoData",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "argPositive",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "argNegative",
                type: "int256",
            },
        ],
        name: "alwaysRevertsWithString",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "argumentHistory",
        outputs: [
            {
                internalType: "int256[]",
                name: "",
                type: "int256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "argPositive",
                type: "int256",
            },
        ],
        name: "convertsPositiveArgumentToNegative",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b506105088061001f6000396000f3fe60806040526004361061005a5760003560e01c8063841e075511610043578063841e0755146100a15780638ef62b29146100c757806393ab3175146100e757600080fd5b8063499449721461005f5780636301c38914610081575b600080fd5b34801561006b57600080fd5b5061007f61007a3660046103e2565b610109565b005b34801561008d57600080fd5b5061007f61009c3660046103e2565b6101a5565b6100b46100af366004610404565b6101f4565b6040519081526020015b60405180910390f35b3480156100d357600080fd5b5061007f6100e23660046103e2565b610286565b3480156100f357600080fd5b506100fc610340565b6040516100be919061041d565b6000821380156101195750600081125b61015d5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908185c99dd5b595b9d60821b60448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601460248201527f5265766572746564207769746820737472696e670000000000000000000000006044820152606401610154565b6000821380156101b55750600081125b61005a5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908185c99dd5b595b9d60821b6044820152606401610154565b60008082136102455760405162461bcd60e51b815260206004820152601560248201527f417267756d656e74206e6f7420706f73697469766500000000000000000000006044820152606401610154565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630182905561028082610460565b92915050565b6000821380156102965750600081125b6102d55760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908185c99dd5b595b9d60821b6044820152606401610154565b604080517f0b9344e2000000000000000000000000000000000000000000000000000000008152607b60048201526024810191909152600360448201527f466f6f00000000000000000000000000000000000000000000000000000000006064820152608401610154565b600080546060919067ffffffffffffffff811115610360576103606104a6565b604051908082528060200260200182016040528015610389578160200160208202803683370190505b50905060005b6000548110156103dc57600081815481106103ac576103ac6104bc565b90600052602060002001548282815181106103c9576103c96104bc565b602090810291909101015260010161038f565b50919050565b600080604083850312156103f557600080fd5b50508035926020909101359150565b60006020828403121561041657600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b81811015610455578351835260209384019390920191600101610437565b509095945050505050565b60007f8000000000000000000000000000000000000000000000000000000000000000820361049f57634e487b7160e01b600052601160045260246000fd5b5060000390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bcddc6de858be5b1d4663faf795813fafae08e0bc9f113b4c291cfc456d9702364736f6c634300081b0033";
const isSuperArgs = (xs) => xs.length > 1;
class MockMulticallTarget__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.MockMulticallTarget__factory = MockMulticallTarget__factory;
//# sourceMappingURL=MockMulticallTarget__factory.js.map