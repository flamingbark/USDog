"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockSafeTarget__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_safe",
                type: "address",
            },
            {
                internalType: "address",
                name: "_forwarder",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "forwarder",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "number",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "safe",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_number",
                type: "uint256",
            },
        ],
        name: "setNumberAsForwarder",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_number",
                type: "uint256",
            },
        ],
        name: "setNumberAsSafe",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60c060405234801561001057600080fd5b5060405161032438038061032483398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a05161025d6100c7600039600081816101090152610136015260008181606c01526101af015261025d6000f3fe60806040526004361061004e5760003560e01c8063186f03541461005a5780634ecc0f82146100ab5780638381f58a146100c0578063ba47588a146100e4578063f645d4f9146100f757600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5061008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461020e565b61012b565b005b3480156100cc57600080fd5b506100d660005481565b6040519081526020016100a2565b6100be6100f236600461020e565b6101a4565b34801561010357600080fd5b5061008e7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461019f5760405162461bcd60e51b815260206004820152601460248201527329b2b73232b9103737ba103337b93bb0b93232b960611b60448201526064015b60405180910390fd5b600055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461019f5760405162461bcd60e51b815260206004820152600f60248201526e53656e646572206e6f74207361666560881b6044820152606401610196565b60006020828403121561022057600080fd5b503591905056fea2646970667358221220db9cc4496cee53ac17aa0f0d6e68f1b3141fcd91ebd68ee8ba28442ad09af29c64736f6c634300080c0033";
const isSuperArgs = (xs) => xs.length > 1;
class MockSafeTarget__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_safe, _forwarder, overrides) {
        return super.getDeployTransaction(_safe, _forwarder, overrides || {});
    }
    deploy(_safe, _forwarder, overrides) {
        return super.deploy(_safe, _forwarder, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.MockSafeTarget__factory = MockSafeTarget__factory;
//# sourceMappingURL=MockSafeTarget__factory.js.map