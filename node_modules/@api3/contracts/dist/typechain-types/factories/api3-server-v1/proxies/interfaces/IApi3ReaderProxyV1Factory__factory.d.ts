import { type ContractRunner } from "ethers";
import type { IApi3ReaderProxyV1Factory, IApi3ReaderProxyV1FactoryInterface } from "../../../../api3-server-v1/proxies/interfaces/IApi3ReaderProxyV1Factory";
export declare class IApi3ReaderProxyV1Factory__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "proxy";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "dapiName";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "dappId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly name: "DeployedApi3ReaderProxyV1";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "api3ServerV1OevExtension";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "dapiName";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "dappId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly name: "computeApi3ReaderProxyV1Address";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "proxy";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "dapiName";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "dappId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "metadata";
            readonly type: "bytes";
        }];
        readonly name: "deployApi3ReaderProxyV1";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "proxy";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IApi3ReaderProxyV1FactoryInterface;
    static connect(address: string, runner?: ContractRunner | null): IApi3ReaderProxyV1Factory;
}
//# sourceMappingURL=IApi3ReaderProxyV1Factory__factory.d.ts.map