"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlRegistryAdminnedWithManager__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_accessControlRegistry",
                type: "address",
            },
            {
                internalType: "string",
                name: "_adminRoleDescription",
                type: "string",
            },
            {
                internalType: "address",
                name: "_manager",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "accessControlRegistry",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "adminRole",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "adminRoleDescription",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "manager",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "tryMulticall",
        outputs: [
            {
                internalType: "bool[]",
                name: "successes",
                type: "bool[]",
            },
            {
                internalType: "bytes[]",
                name: "returndata",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x61010060405234801561001157600080fd5b50604051610c71380380610c718339810160408190526100309161025f565b82826001600160a01b0382166100805760405162461bcd60e51b815260206004820152601060248201526f4143522061646472657373207a65726f60801b60448201526064015b60405180910390fd5b60008151116100d15760405162461bcd60e51b815260206004820152601c60248201527f41646d696e20726f6c65206465736372697074696f6e20656d707479000000006044820152606401610077565b6001600160a01b03821660805260006100ea82826103bd565b50806040516020016100fc919061047b565b60408051601f19818403018152919052805160209091012060a05250506001600160a01b03811661016f5760405162461bcd60e51b815260206004820152601460248201527f4d616e616765722061646472657373207a65726f0000000000000000000000006044820152606401610077565b6001600160a01b03811660c05261018581610191565b60e05250610497915050565b60006102036101d4836040516001600160601b0319606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b60a051604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b92915050565b80516001600160a01b038116811461022057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561025657818101518382015260200161023e565b50506000910152565b60008060006060848603121561027457600080fd5b61027d84610209565b60208501519093506001600160401b0381111561029957600080fd5b8401601f810186136102aa57600080fd5b80516001600160401b038111156102c3576102c3610225565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102f1576102f1610225565b60405281815282820160200188101561030957600080fd5b61031a82602083016020860161023b565b935061032b91505060408501610209565b90509250925092565b600181811c9082168061034857607f821691505b60208210810361036857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103b857806000526020600020601f840160051c810160208510156103955750805b601f840160051c820191505b818110156103b557600081556001016103a1565b50505b505050565b81516001600160401b038111156103d6576103d6610225565b6103ea816103e48454610334565b8461036e565b6020601f82116001811461041e57600083156104065750848201515b600019600385901b1c1916600184901b1784556103b5565b600084815260208120601f198516915b8281101561044e578785015182556020948501946001909201910161042e565b508482101561046c5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000825161048d81846020870161023b565b9190910192915050565b60805160a05160c05160e0516107a66104cb6000396000607b01526000610122015260005050600060b501526107a66000f3fe608060405234801561001057600080fd5b50600436106100715760003560e01c8063481c6a7511610050578063481c6a751461011d5780634c8f1d8d14610144578063ac9650d81461015957600080fd5b80629f2f3c146100765780631ce9ae07146100b0578063437b9116146100fc575b600080fd5b61009d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a7565b61010f61010a36600461050c565b610179565b6040516100a7929190610625565b6100d77f000000000000000000000000000000000000000000000000000000000000000081565b61014c6102df565b6040516100a7919061067f565b61016c61016736600461050c565b61036d565b6040516100a79190610699565b606080828067ffffffffffffffff811115610196576101966106ac565b6040519080825280602002602001820160405280156101bf578160200160208202803683370190505b5092508067ffffffffffffffff8111156101db576101db6106ac565b60405190808252806020026020018201604052801561020e57816020015b60608152602001906001900390816101f95790505b50915060005b818110156102d6573086868381811061022f5761022f6106c2565b905060200281019061024191906106d8565b60405161024f929190610726565b600060405180830381855af49150503d806000811461028a576040519150601f19603f3d011682016040523d82523d6000602084013e61028f565b606091505b508583815181106102a2576102a26106c2565b602002602001018584815181106102bb576102bb6106c2565b60209081029190910101919091529015159052600101610214565b50509250929050565b600080546102ec90610736565b80601f016020809104026020016040519081016040528092919081815260200182805461031890610736565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081565b6060818067ffffffffffffffff811115610389576103896106ac565b6040519080825280602002602001820160405280156103bc57816020015b60608152602001906001900390816103a75790505b50915060005b81811015610504576000308686848181106103df576103df6106c2565b90506020028101906103f191906106d8565b6040516103ff929190610726565b600060405180830381855af49150503d806000811461043a576040519150601f19603f3d011682016040523d82523d6000602084013e61043f565b606091505b50858481518110610452576104526106c2565b60209081029190910101529050806104fb576000848381518110610478576104786106c2565b602002602001015190506000815111156104955780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4d756c746963616c6c3a204e6f2072657665727420737472696e670000000000604482015260640160405180910390fd5b506001016103c2565b505092915050565b6000806020838503121561051f57600080fd5b823567ffffffffffffffff81111561053657600080fd5b8301601f8101851361054757600080fd5b803567ffffffffffffffff81111561055e57600080fd5b8560208260051b840101111561057357600080fd5b6020919091019590945092505050565b6000815180845260005b818110156105a95760208185018101518683018201520161058d565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561061957601f19858403018852610603838351610583565b60209889019890935091909101906001016105e7565b50909695505050505050565b6040808252835190820181905260009060208501906060840190835b818110156106615783511515835260209384019390920191600101610641565b5050838103602085015261067581866105c9565b9695505050505050565b6020815260006106926020830184610583565b9392505050565b60208152600061069260208301846105c9565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126106ef57600080fd5b83018035915067ffffffffffffffff82111561070a57600080fd5b60200191503681900382131561071f57600080fd5b9250929050565b8183823760009101908152919050565b600181811c9082168061074a57607f821691505b60208210810361076a57634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122031ab8e91d8245d5c6a8e866e4ccd26e1fa39e49202a28ee94a7b2adc139b1c0864736f6c634300081b0033";
const isSuperArgs = (xs) => xs.length > 1;
class AccessControlRegistryAdminnedWithManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_accessControlRegistry, _adminRoleDescription, _manager, overrides) {
        return super.getDeployTransaction(_accessControlRegistry, _adminRoleDescription, _manager, overrides || {});
    }
    deploy(_accessControlRegistry, _adminRoleDescription, _manager, overrides) {
        return super.deploy(_accessControlRegistry, _adminRoleDescription, _manager, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AccessControlRegistryAdminnedWithManager__factory = AccessControlRegistryAdminnedWithManager__factory;
//# sourceMappingURL=AccessControlRegistryAdminnedWithManager__factory.js.map